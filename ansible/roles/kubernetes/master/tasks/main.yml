---
- name: Remove swapfile from /etc/fstab
  mount:
    name: swap
    fstype: swap
    state: absent

- name: Turn swap off
  shell: swapoff -a

- name: Put SELinux in permissive mode.
  selinux:
    policy: targeted
    state: permissive

- name: Effectively disable SELinux
  replace:
    path: /etc/selinux/config
    regexp: '^SELINUX=enforcing$'
    replace: 'SELINUX=permissive'

- name: Setup kubernetes.repo
  copy:
    dest: "/etc/yum.repos.d/kubernetes.repo"
    content: |
      [kubernetes]
      name=Kubernetes
      baseurl=https://packages.cloud.google.com/yum/repos/kubernetes-el7-x86_64
      enabled=1
      gpgcheck=1
      repo_gpgcheck=1
      gpgkey=https://packages.cloud.google.com/yum/doc/yum-key.gpg https://packages.cloud.google.com/yum/doc/rpm-package-key.gpg

- name: Yum repo Update
  shell: yum update -y

- name: Install kubernetes packages
  yum:
    name: "{{ item }}-{{ kubernetes_version | replace('v', '') }}"
    update_cache: yes
    state: installed
  with_items: ['kubeadm', 'kubelet']
  register: kubeadm_pkg_installed

# - name: Install kubeadm packages
#   yum:
#     name: ['kubeadm', 'kubelet'] 
#     state: present
#   register: kubeadm_pkg_installed

- name: Enable and check kubelet service
  when: kubeadm_pkg_installed
  systemd:
    name: kubelet
    daemon_reload: yes
    state: started
    enabled: yes
  register: started_kubelet

- name: modprobe
  command: modprobe br_netfilter

- name: Add netbridge config ip6
  lineinfile:
    path: /etc/sysctl.d/k8s.conf
    line: 'net.bridge.bridge-nf-call-ip6tables = 1'
    state: present
    create: yes

- name: Add netbridge config ip4
  lineinfile:
    path: /etc/sysctl.d/k8s.conf
    line: 'net.bridge.bridge-nf-call-iptables = 1'
    state: present
    create: yes

- name: Update sysctl
  command: sysctl --system
  register: kubeadm_installed

- name: Reset Kubernetes component
  when: kubeadm_installed is succeeded
  shell: "kubeadm reset --force"
  register: reset_cluster

- name: Init Kubernetes cluster
  when: reset_cluster is succeeded
  shell: kubeadm init \
          --pod-network-cidr=10.244.0.0/16
          --token={{ kubeadm_token }}
  register: init_cluster

- name: Create Kubernetes config directory
  file:
    path: ".kube/"
    state: directory

- name: Copy admin.conf to Home directory
  when: init_cluster is succeeded
  copy:
    src: /etc/kubernetes/admin.conf
    dest: ".kube/config"
    owner: "{{ ansible_user | default(ansible_user_id) }}"
    group: "{{ ansible_user | default(ansible_user_id) }}"
    mode: 0755
    remote_src: true

- name: Deploy kubernetes dashboard into cluster
  when: init_cluster is succeeded
  become: false
  shell: kubectl apply -f https://raw.githubusercontent.com/kubernetes/dashboard/master/aio/deploy/recommended.yaml
  register: dashboard
  until: dashboard.rc == 0
  retries: 5
  delay: 2
  ignore_errors: true